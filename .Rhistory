x_1 <- arima.sim(list(ar = 0.9), 1000)
p1 <- Acf(x_1)
x_2 <- arima.sim(list(ar = 0.2), 1000)
p2 <- Acf(x_2)
x_3 <- arima.sim(list(ar = c(0.5,-0.8)), 1000)
p3 <- ggAcf(x_3)
grid.arrange(p1,p2,p3)
x_1 <- arima.sim(list(ar = 0.9), 1000)
p1 <- ggAcf(x_1)
x_2 <- arima.sim(list(ar = 0.2), 1000)
p2 <- ggAcf(x_2)
x_3 <- arima.sim(list(ar = c(0.5,-0.8)), 1000)
p3 <- ggAcf(x_3)
grid.arrange(p1,p2,p3)
x_1 <- arima.sim(list(ar = 0.9), 1000)
p1 <- ggAcf(x_1)
x_2 <- arima.sim(list(ar = 0.2), 1000)
p2 <- ggAcf(x_2)
x_3 <- arima.sim(list(ar = c(0.5,-0.8)), 1000)
p3 <- ggAcf(x_3)
p1
p2
p3
x_1 <- arima.sim(list(ar = 0.9), 1000)
p1 <- ggAcf(x_1)
x_2 <- arima.sim(list(ar = 0.2), 1000)
p2 <- ggAcf(x_2)
x_3 <- arima.sim(list(ar = c(0.5,-0.8)), 1000)
p3 <- ggAcf(x_3)
p1
p2
p3
x_1 <- arima.sim(list(ar = 0.9), 1000)
p1 <- ggAcf(x_1)
x_2 <- arima.sim(list(ar = 0.2), 1000)
p2 <- ggAcf(x_2)
x_3 <- arima.sim(list(ar = c(0.5,-0.8)), 1000)
p3 <- ggAcf(x_3)
p1
p2
p3
lag(x_1)
x_1
as.numeric(x_1)
lm(as.numeric(x_1) ~ lag(as.numeric(x_1),1)
lm(as.numeric(x_1) ~ lag(as.numeric(x_1),1))
model <- lm(as.numeric(x_1) ~ lag(as.numeric(x_1),1))
AIC(model)
model <- lm(as.numeric(x_1) ~ lag(as.numeric(x_1),1))
tidy(model)
AIC(model)
model <- lm(as.numeric(x_1) ~ lag(as.numeric(x_1),1))
tidy(model)
AIC(model)
arima(x_1, order = c(1,0,0))
model <- lm(as.numeric(x_1) ~ lag(as.numeric(x_1),1))
tidy(model)
AIC(model)
arima_model <- arima(x_1, order = c(1,0,0))
tidy(arima_model)
AIC(arima_model)
model <- lm(as.numeric(x_1) ~ lag(as.numeric(x_1),1))
tidy(model)
AIC(model)
arima_model <- arima(x_1, order = c(1,0,0))
tidy(arima_model)
AIC(arima_model)
model <- lm(as.numeric(x_1) ~ lag(as.numeric(x_1),1))
tidy(model)
print(AIC(model))
arima_model <- arima(x_1, order = c(1,0,0))
tidy(arima_model)
print(AIC(arima_model))
model <- lm(as.numeric(x_1) ~ lag(as.numeric(x_1),1))
arima_model <- arima(x_1, order = c(1,0,0))
tidy(model)
tidy(arima_model)
print(AIC(model))
print(AIC(arima_model))
model <- lm(as.numeric(x_1) ~ lag(as.numeric(x_1),1))
arima_model <- arima(x_1, order = c(1,0,0))
tidy(model)
tidy(arima_model)
paste("AIC of lm ", AIC(model))
print("AIC of arima ", AIC(arima_model))
model <- lm(as.numeric(x_1) ~ lag(as.numeric(x_1),1))
arima_model <- arima(x_1, order = c(1,0,0))
tidy(model)
tidy(arima_model)
paste("AIC of lm ", AIC(model))
paste("AIC of arima ", AIC(arima_model))
knitr::opts_chunk$set(warning = FALSE,
message = FALSE)
library(tidyverse)
library(broom)
library(forecast)
library(zoo)
library(gridExtra)
library(ggplot2)
dat5 <- read_csv("./data/ts5_shorelines.csv")
dat5
dat5 <- read_csv("./data/ts5_shorelines.csv")
# CreateDate obj
date_to_str <- strptime(dat5$date, "%Y-%m-%d")
# Create zoo obj
zoo_obj <- zoo(dat6$shoreline, date_to_str)
# aggregate
aggregated <- aggregate(zoo_obj, as.yearmon, mean)
# Create ts object
ts5 <- as.ts(aggregated)
dat5 <- read_csv("./data/ts5_shorelines.csv")
# CreateDate obj
date_to_str <- strptime(dat5$date, "%Y-%m-%d")
# Create zoo obj
zoo_obj <- zoo(dat5$shoreline, date_to_str)
# aggregate
aggregated <- aggregate(zoo_obj, as.yearmon, mean)
# Create ts object
ts5 <- as.ts(aggregated)
dat5 <- read_csv("./data/ts5_shorelines.csv")
# CreateDate obj
date_to_str <- strptime(dat5$date, "%Y-%m-%d")
date_to_str
# # Create zoo obj
# zoo_obj <- zoo(dat5$shoreline, date_to_str)
#
# # aggregate
# aggregated <- aggregate(zoo_obj, as.yearmon, mean)
#
# # Create ts object
# ts5 <- as.ts(aggregated)
# ts5
dat5 <- read_csv("./data/ts5_shorelines.csv")
# CreateDate obj
date_to_str <- strptime(dat5$date, "%Y-%m")
date_to_str
# # Create zoo obj
# zoo_obj <- zoo(dat5$shoreline, date_to_str)
#
# # aggregate
# aggregated <- aggregate(zoo_obj, as.yearmon, mean)
#
# # Create ts object
# ts5 <- as.ts(aggregated)
# ts5
dat5 <- read_csv("./data/ts5_shorelines.csv")
ts(data = dat5$shoreline, frequency = 12)
dat5 <- read_csv("./data/ts5_shorelines.csv")
ts5 <- ts(data = dat5$shoreline, frequency = 12)
ar3 <- arima(ts5, order = c(3,0,0))
ma4 <- arima(ts5, order = c(0,0,4))
arma34 <- arima(ts5, order = c(3,0,4))
arima314 <- arima(ts5, order = c(3,1,4))
AIC(ar3)
AIC(ma4)
AIC(arma34)
AIC(arima314)
autoplot(ts5)
dat5 <- read_csv("./data/ts5_shorelines.csv")
ts5 <- ts(data = dat5$shoreline, frequency = 12)
ar3 <- auto.arima(ts5, order = c(3,0,0))
dat5 <- read_csv("./data/ts5_shorelines.csv")
ts5 <- ts(data = dat5$shoreline, frequency = 12)
ar3 <- arima(ts5, order = c(3,0,0))
ma4 <- arima(ts5, order = c(0,0,4))
arma34 <- arima(ts5, order = c(3,0,4))
arima314 <- arima(ts5, order = c(3,1,4))
auto <- auto.arima(ts5)
AIC(ar3)
AIC(ma4)
AIC(arma34)
AIC(arima314)
AIC(auto)
dat5 <- read_csv("./data/ts5_shorelines.csv")
ts5 <- ts(data = dat5$shoreline, frequency = 12)
ar3 <- arima(ts5, order = c(3,0,0))
ma4 <- arima(ts5, order = c(0,0,4))
arma34 <- arima(ts5, order = c(3,0,4))
arima314 <- arima(ts5, order = c(3,1,4))
auto <- auto.arima(ts5)
AIC(ar3)
AIC(ma4)
AIC(arma34)
AIC(arima314)
AIC(auto)
auto
autoplot(ts5) + autoplot(auto) + autoplot(ma4)
autoplot(ts5) +
autoplot(auto) +
autoplot(ma4)
autoplot(ts5)
autoplot(auto)
autoplot(ts5)
plot(auto)
autoplot(ts5)
plot(ma4)
autoplot(ts5)
plot(predict(ma4))
autoplot(ts5)
plot(predict(ma4, n.ahead = 8))
autoplot(m4, type=c("ma"))
autoplot(ma4, type=c("ma"))
plot(fitted(auto))
autoplot(ts5) +
plot(fitted(auto), color="red") +
plot(fitted(ma4), color="blue")
autoplot(ts5) +
geom_line(fitted(auto), color="red") +
geom_line(fitted(ma4), color="blue")
dat5 <- read_csv("./data/ts5_shorelines.csv")
ts5 <- ts(data = dat5$shoreline, frequency = 12)
ar3 <- arima(ts5, order = c(3,0,0))
ma4 <- arima(ts5, order = c(0,0,4))
arma34 <- arima(ts5, order = c(3,0,4))
arima314 <- arima(ts5, order = c(3,1,4))
auto <- auto.arima(ts5)
AIC(ar3)
AIC(ma4)
AIC(arma34)
AIC(arima314)
AIC(auto)
auto
ts5
dat5 <- read_csv("./data/ts5_shorelines.csv")
ts5 <- ts(data = dat5$shoreline, frequency = 12)
ar3 <- arima(ts5, order = c(3,0,0))
ma4 <- arima(ts5, order = c(0,0,4))
arma34 <- arima(ts5, order = c(3,0,4))
arima314 <- arima(ts5, order = c(3,1,4))
auto <- auto.arima(ts5)
AIC(ar3)
AIC(ma4)
AIC(arma34)
AIC(arima314)
AIC(auto)
dat5 <- read_csv("./data/ts5_shorelines.csv")
ts5 <- ts(data = dat5$shoreline, frequency = 12)
ar3 <- arima(ts5, order = c(3,0,0))
ma4 <- arima(ts5, order = c(0,0,4))
arma34 <- arima(ts5, order = c(3,0,4))
arima314 <- arima(ts5, order = c(3,1,4))
auto <- auto.arima(ts5)
AIC(ar3)
AIC(ma4)
AIC(arma34)
AIC(arima314)
AIC(auto)
tidy(auto)
dat5 <- read_csv("./data/ts5_shorelines.csv")
ts5 <- ts(data = dat5$shoreline, frequency = 12)
ar3 <- arima(ts5, order = c(3,0,0))
ma4 <- arima(ts5, order = c(0,0,4))
arma34 <- arima(ts5, order = c(3,0,4))
arima314 <- arima(ts5, order = c(3,1,4))
auto <- auto.arima(ts5)
AIC(ar3)
AIC(ma4)
AIC(arma34)
AIC(arima314)
AIC(auto)
summary(auto)
autoplot(ts5) +
geom_line(aes(x=time(ts5), y=fitted(auto)), color="red") +
geom_line(aes(x=time(ts5), y=fitted(ma4)), color="blue")
autoplot(ts5) +
geom_line(aes(x=time(ts5), y=fitted(auto)), color="red", show.legend = TRUE) +
geom_line(aes(x=time(ts5), y=fitted(ma4)), color="blue", show.legend = TRUE)
autoplot(ts5) +
geom_line(aes(x=time(ts5), y=fitted(auto)), color=red, show.legend = TRUE) +
geom_line(aes(x=time(ts5), y=fitted(ma4)), color=blue, show.legend = TRUE)
autoplot(ts5) +
geom_line(aes(x=time(ts5), y=fitted(auto)), color="red", show.legend = TRUE) +
geom_line(aes(x=time(ts5), y=fitted(ma4)), color="blue", show.legend = TRUE)
autoplot(ts5) +
geom_line(aes(x=time(ts5), y=fitted(auto), color="red"), show.legend = TRUE) +
geom_line(aes(x=time(ts5), y=fitted(ma4), color="blue"), show.legend = TRUE)
autoplot(ts5) +
geom_line(aes(x=time(ts5), y=fitted(auto), color="ARIMA(1,1,2): Best fit"), show.legend = TRUE) +
geom_line(aes(x=time(ts5), y=fitted(ma4), color="MA(4): Worst fit"), show.legend = TRUE)
arima.sim(model = list(ma=c(1, -4.25, 5.75, -1.80)))
arima.sim(model = list(ma=c(1, -4.25, 5.75, -1.80)), 1000)
arima.sim(model = list(ma=c(-4.25, 5.75, -1.80)), 1000)
sim_samp <- arima.sim(model = list(ma=c(-4.25, 5.75, -1.80)), 1000)
ACF(sim_samp)
sim_samp <- arima.sim(model = list(ma=c(-4.25, 5.75, -1.80)), 1000)
Acf(sim_samp)
sim_samp <- arima.sim(model = list(ma=c(-4.25, 5.75, -1.80)), 1000)
Acf(sim_samp, lag.max = 100)
dat6 <- read_csv("./data/ts6_co2.csv")
dat6
dat6 <- read_csv("./data/ts6_co2.csv")
ts6 <- ts(data6$co2, frequency = 12)
dat6 <- read_csv("./data/ts6_co2.csv")
ts6 <- ts(dat6$co2, frequency = 12)
ts6
dat6 <- read_csv("./data/ts6_co2.csv")
ts6 <- ts(dat6$co2, frequency = 12)
ts6_diff <- diff(ts6, lag(ts6,1))
dat6 <- read_csv("./data/ts6_co2.csv")
ts6 <- ts(dat6$co2, frequency = 12)
ts6_diff <- diff(dat6$co2, lag(dat6,1))
dat6 <- read_csv("./data/ts6_co2.csv")
ts6 <- ts(dat6$co2, frequency = 12)
ts6_diff <- dat$co2 - lag(dat$co2)
dat6 <- read_csv("./data/ts6_co2.csv")
ts6 <- ts(dat6$co2, frequency = 12)
ts6_diff <- dat6$co2 - lag(dat6$co2)
dat6 <- read_csv("./data/ts6_co2.csv")
ts6 <- ts(dat6$co2, frequency = 12)
ts6_diff <- dat6$co2 - lag(dat6$co2)
ts6_doff
dat6 <- read_csv("./data/ts6_co2.csv")
ts6 <- ts(dat6$co2, frequency = 12)
autoplot(ts6)
dat6_diff <- dat6$co2 - lag(dat6$co2)
ts6_diff <- ts(dat6_diff, frequency = 12)
dat6 <- read_csv("./data/ts6_co2.csv")
ts6 <- ts(dat6$co2, frequency = 12)
autoplot(ts6)
dat6_diff <- dat6$co2 - lag(dat6$co2)
ts6_diff <- ts(dat6_diff, frequency = 12)
autoplot(ts6_diff)
dat6 <- read_csv("./data/ts6_co2.csv")
ts6 <- ts(dat6$co2, frequency = 12)
autoplot(ts6)
dat6_diff <- dat6$co2 - lag(dat6$co2)
ts6_diff <- ts(dat6_diff, frequency = 12)
autoplot(ts6_diff)
auto_ts6 <- auto.arima(ts6_diff, d=0, seasonal=FALSE)
autoplot(fitted(auto_ts6))
dat6 <- read_csv("./data/ts6_co2.csv")
ts6 <- ts(dat6$co2, frequency = 12)
autoplot(ts6)
dat6_diff <- dat6$co2 - lag(dat6$co2,1)
ts6_diff <- ts(dat6_diff, frequency = 12)
autoplot(ts6_diff)
auto_ts6 <- auto.arima(ts6_diff, d=0, seasonal=FALSE)
autoplot(fitted(auto_ts6))
dat6 <- read_csv("./data/ts6_co2.csv")
ts6 <- ts(dat6$co2, frequency = 12)
autoplot(ts6)
dat6_diff <- dat6$co2 - lag(dat6$co2,1)
ts6_diff <- ts(dat6_diff, frequency = 12)
autoplot(ts6_diff)
auto_ts6 <- auto.arima(ts6_diff, d=0, seasonal=FALSE)
autoplot(fitted(auto_ts6))
AIC(auto_ts6)
dat6 <- read_csv("./data/ts6_co2.csv")
ts6 <- ts(dat6$co2, frequency = 12)
autoplot(ts6)
ts6_diff <- ts6 - lag(ts6,1)
dat6 <- read_csv("./data/ts6_co2.csv")
ts6 <- ts(dat6$co2, frequency = 12)
autoplot(ts6)
ts6_diff <- ts6 - stats::lag(ts6,1)
autoplot(ts6_diff)
auto_ts6 <- auto.arima(ts6_diff, d=0, seasonal=FALSE)
autoplot(fitted(auto_ts6))
AIC(auto_ts6)
knitr::opts_chunk$set(warning = FALSE,
message = FALSE)
library(tidyverse)
library(broom)
library(forecast)
library(zoo)
library(gridExtra)
library(ggplot2)
lagged <- diff(dat6, stats::lag(dat6,12))
lagged <- diff(dat6, lag(dat6,12))
lagged <- diff(dat6$co2, lag(dat6$co2,12))
lagged <-  ts6 - stats::lag(ts6,12)
lagged
lagged <-  ts6 - stats::lag(ts6,12)
lagged <- lagged - lag(lagged,1)
lagged <-  ts6 - stats::lag(ts6,12)
lagged <- lagged - stats::lag(lagged,1)
autplot(lagged)
lagged <-  ts6 - stats::lag(ts6,12)
lagged <- lagged - stats::lag(lagged,1)
autoplot(lagged)
lagged <-  ts6 - stats::lag(ts6,12)
lagged <- lagged - stats::lag(lagged,1)
autoplot(lagged)
sd_ts6 <- auto.arima(ts6_diff, d=0, seasonal=FALSE)
AIC(sd_ts6)
lagged <-  ts6 - stats::lag(ts6,12)
lagged <- lagged - stats::lag(lagged,1)
autoplot(lagged)
sd_ts6 <- auto.arima(lagged, d=0, seasonal=FALSE)
AIC(sd_ts6)
auto_ts_model <- auto.arima(ts6, d=1, D=1)
AIC(auto_ts_model)
autoplot(ts5) +
geom_line(aes(x=time(ts5), y=fitted(auto), color="ARIMA(1,1,2): Best fit"), show.legend = TRUE) +
geom_line(aes(x=time(ts5), y=fitted(ma4), color="MA(4): Worst fit"), show.legend = TRUE)
auto_ts_model <- auto.arima(ts6, d=1, D=1)
AIC(auto_ts_model)
autoplot(ts6) +
geom_line(aes(x=time(ts6), y=fitted(auto_ts_model), color="auto.arima"), show.legend = TRUE)
auto_ts_model <- auto.arima(ts6, d=1, D=1)
AIC(auto_ts_model)
summary(auto_ts_model)
autoplot(ts6) +
geom_line(aes(x=time(ts6), y=fitted(auto_ts_model), color="auto.arima"), show.legend = TRUE)
auto_ts_model <- auto.arima(ts6, d=1, D=1)
AIC(auto_ts_model)
summary(auto_ts_model)
autoplot(ts6) +
geom_line(aes(x=time(ts6), y=fitted(auto_ts_model), color="auto.arima", alpha=0.5), show.legend = TRUE)
auto_ts_model <- auto.arima(ts6, d=1, D=1)
AIC(auto_ts_model)
summary(auto_ts_model)
autoplot(ts6) +
geom_line(aes(x=time(ts6), y=fitted(auto_ts_model), color="auto.arima"), show.legend = TRUE)
auto_ts_model <- auto.arima(ts6, d=1, D=1)
AIC(auto_ts_model)
summary(auto_ts_model)
autoplot(ts6) +
geom_line(aes(x=time(ts6), y=fitted(auto_ts_model), color="auto.arima", orginal), show.legend = TRUE)
auto_ts_model <- auto.arima(ts6, d=1, D=1)
AIC(auto_ts_model)
summary(auto_ts_model)
autoplot(ts6, color="original timeseries")
auto_ts_model <- auto.arima(ts6, d=1, D=1)
AIC(auto_ts_model)
summary(auto_ts_model)
autoplot(ts6, aes(color="original timeseries"))
auto_ts_model <- auto.arima(ts6, d=1, D=1)
AIC(auto_ts_model)
summary(auto_ts_model)
autoplot(ts6)
geom_line(aes(x=time(ts6), y=fitted(auto_ts_model), color="auto.arima"), show.legend = TRUE)
auto_ts_model <- auto.arima(ts6, d=1, D=1)
AIC(auto_ts_model)
summary(auto_ts_model)
autoplot(ts6) +
geom_line(aes(x=time(ts6), y=fitted(auto_ts_model), color="auto.arima"), show.legend = TRUE)
lagged <-  ts6 - stats::lag(ts6,12)
lagged <- lagged - stats::lag(lagged,1)
autoplot(lagged)
sd_ts6 <- auto.arima(lagged, d=0, seasonal=FALSE)
summary(sd_ts6)
AIC(sd_ts6)
auto_ts_model <- auto.arima(ts6, d=1, D=1)
AIC(auto_ts_model)
summary(auto_ts_model)
autoplot(ts6) +
geom_line(aes(x=time(ts6), y=fitted(auto_ts_model), color="auto.arima"), show.legend = TRUE)
lagged
lagged <-  ts6 - stats::lag(ts6,12)
lagged <- lagged - stats::lag(lagged,1)
autoplot(lagged)
sd_ts6 <- auto.arima(lagged, d=0, seasonal=FALSE)
summary(sd_ts6)
AIC(sd_ts6)
autoplot(ts6) +
geom_line(aes(x=time(ts6), y=fitted(sd_ts6), color="auto.arima"), show.legend = TRUE)
lagged <-  ts6 - stats::lag(ts6,12)
lagged <- lagged - stats::lag(lagged,1)
autoplot(lagged)
sd_ts6 <- auto.arima(lagged, d=0, seasonal=FALSE)
summary(sd_ts6)
AIC(sd_ts6)
fitted(sd_ts6)
autoplot(ts6) +
geom_line(aes(x=time(ts6), y=fitted(sd_ts6), color="auto.arima"), show.legend = TRUE)
lagged <-  ts6 - stats::lag(ts6,12)
lagged <- lagged - stats::lag(lagged,1)
autoplot(lagged)
sd_ts6 <- auto.arima(lagged, d=0, seasonal=FALSE)
summary(sd_ts6)
AIC(sd_ts6)
length(sd_ts6)
lagged <-  ts6 - stats::lag(ts6,12)
lagged <- lagged - stats::lag(lagged,1)
autoplot(lagged)
sd_ts6 <- auto.arima(lagged, d=0, seasonal=FALSE)
summary(sd_ts6)
AIC(sd_ts6)
length(fitted(sd_ts6))
length(fitted(auto_ts_model))
lagged <-  ts6 - stats::lag(ts6,12)
lagged <- lagged - stats::lag(lagged,1)
autoplot(lagged)
sd_ts6 <- auto.arima(lagged, d=0, seasonal=FALSE)
summary(sd_ts6)
AIC(sd_ts6)
length(fitted(sd_ts6))
length(fitted(auto_ts_model))
auto_ts_model <- auto.arima(ts6, d=1, D=1)
AIC(auto_ts_model)
autoplot(ts6) +
geom_line(aes(x=time(ts6), y=fitted(auto_ts_model), color="auto.arima"), show.legend = TRUE)
library(testthat)
test()
ls
setwd("~/Desktop/UBC/MDS/lab/rb4model")
test()
library(testthat)
test()
test(tests)
load_all()
test()
check()
library(devtools)
test()
check()
load_all()
test()
testthat::test_file(path = "./tests/testthat/test_ForwardSelection.R")
testthat::test_file(path = "./tests/testthat/test_ForwardSelection.R")
testthat::test_file(path = "./tests/testthat/test_ForwardSelection.R")
